#include<iostream>
using namespace std;
class node{
    public:
    int data;
    node* next;
    
    node(int val){
        data=val;
        next=NULL;
    }
};
void traversalcircular(node* head){
    if(head==NULL){
        return;
    }
    node* current=head;
    do{
        cout<<current->data<<" ";
        current=current->next;
    }
    while(current!=head);
    
    cout<<endl;
}
bool searchcircular(node* head,int target){
    if(head==NULL){
        return false;
    }
    node* current=head;
    do{
        if(current->data==target){
            return true;
        }
        current=current->next;
    }
    while(current!=head);
    
    return false;
}
int main(){
    node* head=new node(10);
    node* second=new node(20);
    node* third=new node(30);
    
    head->next=second;
    second->next=third;
    third->next=head;
    
    cout<<"circular traversal: "<<endl;
    traversalcircular(head);
    
    int target;
    cout<<"enter number to be searched: "<<endl;
    cin>>target;
    
    if(searchcircular(head,target)){
        cout<<"element "<<target<<" found in the circular linked list"<<endl;
    }
    else{
        cout<<"element "<<target<<" not found in the circular linked list"<<endl;
    }
    return 0;
}
