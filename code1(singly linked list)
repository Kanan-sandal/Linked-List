#include<iostream>
#include<climits>
using namespace std;
class node{
    public:
    int data;
    node* next;
    
    node(int val){
        data=val;
        next=NULL;
    }
};
void insertathead(node* &head,int val){
    node* n=new node(val);
    n->next=head;
    head=n;
}
void insertattail(node* &head,int val){
    node*n=new node(val);
    
    if(head==NULL){
        head=n;
        return;
    }
    node* temp=head;
    while(temp->next!=NULL){
        temp=temp->next;
    }
    temp->next=n;
    
}
void insertatposition(node*head,int pos,int val){
    node* n=new node(val);
    node* temp=head;
    if(pos<0){
        cout<<"invalid index"<<endl;
    }
    if(pos==0){
        head=n;
        return;
    }
    
    
    for(int i=0;i<pos-1 && temp!=NULL;i++){
        temp=temp->next;
    }
    if(temp==NULL){
        cout<<"index out of bounds"<<endl;
    }
    n->next=temp->next;
    temp->next=n;
}
void deleteatstart(node* &head){
    if(head==NULL){
        cout<<"the list is empty cannot delete any element"<<endl;
        return;
    }
    node* todelete=head;
    head=head->next;
    delete todelete;
}
void deleteatend(node* head){
    if(head==NULL){
      cout<<"the list is empty hence cannot delete any element!"<<endl;  
    }
    if(head->next==NULL){
        delete head;
        head=NULL;
        return;
    }
    node* temp=head;
    while(temp->next->next!=NULL){
        temp=temp->next;
    }
    delete temp->next;
    temp->next=NULL;
}
void deleteatposition(node* &head,int pos){
    if(head==NULL){
        cout<<"the list is empty hence cannot delete any element!"<<endl;
    }
    if(pos<0){
        cout<<"invalid index!"<<endl;
    }
    if(pos==0){
        node* todelete=head;
        head=head->next;
        delete todelete;
        return;
    }
    node* temp=head;
    for(int i=0;i<pos-1 && temp!=NULL;i++){
        temp=temp->next;
    }
    if(temp==NULL || temp->next==NULL){
        cout<<"index out of bounds"<<endl;
    }
    node* todelete=temp->next;
    temp->next=temp->next->next;
    delete todelete;
}
void display(node* head){
    node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}

int main(){
    node* node1=new node(10);
    node* head=node1;
    display(head);
    insertathead(head,12);
    insertathead(head,15);
    display(head);
    insertattail(head,22);
    display(head);
    insertatposition(head,3,19);
    display(head);
    deleteatstart(head);
    display(head);
    deleteatend(head);
    display(head);
    deleteatposition(head,3);
    display(head);
    return 0;
}
